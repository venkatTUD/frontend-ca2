name: Docker Image CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: receipt-frontend
  DOCKER_REGISTRY: docker.io
  DO_CLUSTER_NAME: receipt-cluster

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Get short SHA
      - name: Get short SHA
        id: sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Step 3: Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERID }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 5: Build and push Docker image
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            venkatakurathitud/${{ env.IMAGE_NAME }}:latest
            venkatakurathitud/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Step 6: Install doctl
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # Step 7: Configure kubectl
      - name: Configure kubectl
        run: |
          doctl kubernetes cluster kubeconfig save ${{ env.DO_CLUSTER_NAME }} || { echo "Failed to configure kubectl"; exit 1; }

      # Step 8: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          # Apply Kubernetes configurations
          kubectl apply -f kubernetes/deployment.yaml -n default || { echo "Failed to apply deployment.yaml"; exit 1; }
          kubectl apply -f kubernetes/service.yaml -n default || { echo "Failed to apply service.yaml"; exit 1; }
          
          # Update deployment image
          kubectl set image deployment/receipt-frontend receipt-frontend=venkatakurathitud/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }} -n default
          
          # Wait for rollout to complete
          kubectl rollout status deployment/receipt-frontend -n default
          
          # Verify deployment
          kubectl get pods -l app=receipt-frontend -n default -o wide
          kubectl get svc receipt-frontend-service -n default -o wide